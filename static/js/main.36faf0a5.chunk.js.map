{"version":3,"sources":["About.js","Projects.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["handleRedir","url","window","open","redir","website","About","props","state","aboutMe","data","aboutme","currentWork","key","className","onClick","work","role","company","timeframe","map","w","i","this","Component","Projects","projects","p","title","year","description","href","linktext","style","backgroundColor","id","color","target","rel","email","location","facebook","linkedin","github","App","xmlns","width","height","viewBox","d","defaultIndex","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36faf0a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport data from './info.json';\nimport './About.css';\nfunction handleRedir(url) {\n  window.open(url, '_blank');\n}\nfunction email() {\n  window.location.href = `mailto:joshsantillo@gmail.com`;\n}\nfunction facebook() {\n  handleRedir('https://facebook.com/jdsantillo/')\n}\nfunction linkedin() {\n  handleRedir('https://linkedin.com/in/santilloj/')\n}\nfunction github() {\n  handleRedir('https://github.com/sohuja96/')\n}\nfunction redir(website) {\n  handleRedir(website);\n}\n\nclass About extends Component {\n  redirect(url) {\n    window.open(url, '_blank');\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      aboutMe: <h4>{ data.aboutme }</h4>,\n      currentWork: \n        <div key='0' className=\"industry\" onClick={() => redir(data.work[0].website)}>\n          <h4 className=\"header\">{data.aboutme}</h4>\n          <div className=\"divider\"></div>\n          <h3>{data.work[0].role}</h3>\n          <h4>{data.work[0].company}</h4>\n          <h6>{data.work[0].timeframe}</h6>\n        </div>,\n      work: data.work.map((w, i) => {\n        if (i === 0) { return; }\n        return (<div key={i} className=\"industry past\" onClick={() => redir(w.website)}>\n          <h3>{w.role}</h3>\n          <h4>{w.company}</h4>\n          <h6>{w.timeframe}</h6>\n        </div>\n      )}),\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"aboutdiv\">\n        <h1 className=\"header\">My Work</h1>\n        { this.state.currentWork }\n        <div className=\"divider\"></div>\n        <h1 className=\"header\">Past Work</h1>\n        { this.state.work }\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport data from './info.json';\nimport './Projects.css';\nfunction handleRedir(url) {\n  window.open(url, '_blank');\n}\nfunction email() {\n  window.location.href = `mailto:joshsantillo@gmail.com`;\n}\nfunction facebook() {\n  handleRedir('https://facebook.com/jdsantillo/')\n}\nfunction linkedin() {\n  handleRedir('https://linkedin.com/in/santilloj/')\n}\nfunction github() {\n  handleRedir('https://github.com/sohuja96/')\n}\nfunction redir(website) {\n  handleRedir(website);\n}\n\nclass Projects extends Component {\n  redirect(url) {\n    window.open(url, '_blank');\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: data.projects.map((p, i) => {\n        return (\n          <div key={i} className=\"project\">\n            <h3>{p.title}</h3>\n            <h4>{p.year}</h4>\n            <p>{p.description}</p>\n            <h6><a href=\"{p.link}\">{p.linktext}</a></h6>\n          </div>\n        );\n      })\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"projectdiv\">\n        <div className=\"unused\"\n          onClick={(() => redir(\"https://github.com/sohuja96\"))}\n        >\n          <h1>Projects</h1>\n        </div>\n        {this.state.projects}\n        <div className=\"unused\"\n        onClick={ (() => redir(\"https://atlanta.net/\"))}\n        style={{backgroundColor: \"#282c34\"}}>\n          <h2><a\n            id=\"mia\"\n            style={{color: \"#fff\"}}\n            href=\"https://atlanta.net/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            Made in Atlanta\n          </a></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport data from './info.json';\nimport './About.css';\n\nfunction handleRedir(url) {\n  window.open(url, '_blank');\n}\nclass About extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      work: (\n        <span onClick={() => handleRedir(data.work[0].website)}>\n          <span>{data.work[0].role}</span> at <span>{data.work[0].company}</span>\n        </span>\n      ),\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Contact\">\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Tabs, TabList, Tab, TabPanel } from 'react-tabs';\nimport About from './About.js';\nimport 'react-tabs/style/react-tabs.css';\nimport Projects from './Projects.js';\nimport Contact from './Contact.js';\nimport data from './info.json';\nimport './App.css';\n\nfunction handleRedir(url) {\n  window.open(url, '_blank');\n}\nfunction email() {\n  window.location.href = `mailto:joshsantillo@gmail.com`;\n}\nfunction facebook() {\n  handleRedir('https://facebook.com/jdsantillo/')\n}\nfunction linkedin() {\n  handleRedir('https://linkedin.com/in/santilloj/')\n}\nfunction github() {\n  handleRedir('https://github.com/sohuja96/')\n}\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>{data.title}</h1>\n          <div className=\"social\">\n            <button onClick={email}>\n              <svg className=\"button\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 .02c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6.99 6.98l-6.99 5.666-6.991-5.666h13.981zm.01 10h-14v-8.505l7 5.673 7-5.672v8.504z\"/></svg>\n            </button>\n            <button onClick={facebook}>\n              <svg className=\"button\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm3 8h-1.35c-.538 0-.65.221-.65.778v1.222h2l-.209 2h-1.791v7h-3v-7h-2v-2h2v-2.308c0-1.769.931-2.692 3.029-2.692h1.971v3z\"/></svg>\n            </button>\n            <button onClick={github}>\n              <svg className=\"button\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/></svg>\n            </button>\n            <button onClick={linkedin}>\n              <svg className=\"button\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 16h-2v-6h2v6zm-1-6.891c-.607 0-1.1-.496-1.1-1.109 0-.612.492-1.109 1.1-1.109s1.1.497 1.1 1.109c0 .613-.493 1.109-1.1 1.109zm8 6.891h-1.998v-2.861c0-1.881-2.002-1.722-2.002 0v2.861h-2v-6h2v1.093c.872-1.616 4-1.736 4 1.548v3.359z\"/></svg>\n            </button>\n          </div>\n        </header>\n        <Tabs defaultIndex={0}>\n          <TabList>\n            <Tab>Projects</Tab>\n            <Tab>About</Tab>\n          </TabList>\n          <TabPanel><Projects/></TabPanel>\n          <TabPanel><About/></TabPanel>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}